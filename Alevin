#---https://combine-lab.github.io/alevin-fry-tutorials/2021/running-alevin-fry-fast/

#-----get reference 10xgenome
wget https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz
tar xzf refdata-gex-GRCh38-2020-A.tar.gz

#---go into refdata-gex-GRCh38-2020-A folder
#----build gffread
git clone https://github.com/gpertea/gffread
cd gffread
make release

#----extract transcriptome and GTF file that encodes transcripts
./gffread -w /home/deviancedev/Desktop/drive_jan2024/Alevin_Salmon/refdata-gex-GRCh38-2020-A/transcriptome.fa -g /home/deviancedev/Desktop/drive_jan2024/Alevin_Salmon/refdata-gex-GRCh38-2020-A/fasta/genome.fa /home/deviancedev/Desktop/drive_jan2024/Alevin_Salmon/refdata-gex-GRCh38-2020-A/genes/genes.gtf

#-----build the index-- max threads is 7
salmon index -t /home/deviancedev/Desktop/drive_jan2024/Alevin_Salmon/refdata-gex-GRCh38-2020-A/transcriptome.fa -i grch38_idx -p 7

#---generate transcript to gene file
awk '{if($3=="transcript") {OFS="\t"; print $14, $10} }' *./refdata-gex-GRCh38-2020-A/genes/genes.gtf | sed 's/[;\"]//g' > t2g.tsv

#---map reads to index
salmon alevin -i /home/deviancedev/Desktop/drive_jan2024/Alevin_Salmon/refdata-gex-GRCh38-2020-A/index/grch38_idx -p 16 -l IU --chromiumV3 --sketch -1 /home/deviancedev/Desktop/drive_jan2024/Alevin_Salmon/refdata-gex-GRCh38-2020-A/pbmc_10k_v3_fastqs/pbmc_10k_v3_S1_L001_R1_001.fastq.gz -2 /home/deviancedev/Desktop/drive_jan2024/Alevin_Salmon/refdata-gex-GRCh38-2020-A/pbmc_10k_v3_fastqs/pbmc_10k_v3_S1_L001_R2_001.fastq.gz -o pbmc_10k_v3_map

#----HAVE TO GET ALEVIN-FRY AT https://anaconda.org/bioconda/alevin-fry/files
tar -xf linux-64_alevin-fry-0.8.2-h4ac6f70_0.tar.bz2
cd linux-64_alevin-fry-0.8.2-h4ac6f70_0/
export PATH=/path_to_alevin/bin:$PATH

#---generate a permit list of barcodes
alevin-fry generate-permit-list -d fw -k -i *./pbmc_10k_v3_map -o pbmc_10k_v3_quant

#---collate files
alevin-fry collate -t 16 -i *./pbmc_10k_v3_quant -r *./pbmc_10k_v3_map








